name: Test
on:
  - push

jobs:
  test-linux:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ruby: ["2.5", "2.6", "2.7", "3.0", "3.1", "3.2", "3.3"]
        arch: [amd64, arm64]
        libc: [gnu, musl]
        include:
          - arch: amd64
            platform: x86_64-linux
          - arch: arm64
            platform: aarch64-linux

    name: Test (Ruby ${{ matrix.ruby }}, ${{ matrix.arch }}, ${{ matrix.libc }})
    runs-on: ${{ matrix.os }}

    env:
      DOCKER_BUILD_CMD: docker build --platform linux/${{ matrix.arch }} -t libddwaf-rb-test
      DOCKER_CMD: docker run
                  --platform linux/${{ matrix.arch }}
                  -v gems:/usr/local/bundle
                  -v "${PWD}":/libddwaf-rb
                  -w /libddwaf-rb libddwaf-rb-test

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.arch }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Build docker image
        if: ${{ matrix.libc == 'gnu' }}
        run: |
          ${{ env.DOCKER_BUILD_CMD }} - <<'EOT'
            FROM ruby:${{ matrix.ruby }}

            RUN gem update --system 3.3.27
          EOT

      - name: Build alpine docker image
        if: ${{ matrix.libc == 'musl' }}
        run: |
          ${{ env.DOCKER_BUILD_CMD }} - <<'EOT'
            FROM ruby:${{ matrix.ruby }}-alpine

            RUN apk add --no-cache build-base git

            RUN gem update --system 3.3.27
          EOT

      - name: Bundle install
        run: ${{ env.DOCKER_CMD }} bundle install

      - name: Fetch binary library
        run: ${{ env.DOCKER_CMD }} bundle exec rake fetch[${{ matrix.platform }}]

      - name: Extract binary library
        run: ${{ env.DOCKER_CMD }} bundle exec rake extract[${{ matrix.platform }}]

      - name: Run specs
        run: ${{ env.DOCKER_CMD }} bundle exec rake spec

  test-darwin:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, macos-latest-large]
        include:
          - os: macos-latest
            platform: arm64-darwin
          - os: macos-latest-large
            platform: x86_64-darwin
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Bundle
        run: bundle install

      - name: Fetch binary library
        run: bundle exec rake fetch[${{ matrix.platform }}]

      - name: Extract binary library
        run: bundle exec rake extract[${{ matrix.platform }}]

      - name: Run specs
        run: bundle exec rake spec
